function batch_model_spec_and_est(subj_info_struct, base_dir, analysis_subdir, pattern_regex)

%%% Find absolute path of base directory automagically

%%% Subdirectory of base_dir which contains imaging data. DON'T EDIT THIS
%%% if your data lives somewhere else; just create a symlink in base_dir
%%% which points to your data.  See README.md.
imaging_data_subfolder = 'data-imaging';

%%% Load default subject information if not provided.
if nargin < 1
    subj_info_struct = subj_info();
end
if nargin < 2
    base_dir = BaseDir();
end
if nargin < 3
    analysis_subdir = 'SPM_analysis/';
end
if nargin < 4
    pattern_regex = 'war';
end
%%% Where do the NiFTi files live in each subject's directory?
converted_subdir = 'Mcverter_Dicom_conversion/';
%%% What is the regex pattern to select data files? 'wr' is
%%% normalized+realigned
image_file_regex = ['^', pattern_regex, '.*\.nii$'];
motionReg_file_regex = ['^rp.*.txt$'];
%%% Template to get a subject's analysis base directory: 
session_base_dir_template = fullfile(BaseDir(), 'subjects', 'Subject%03d');
% evaluate template by sprintf(session_base_dir_template, subnum, prepost)

%%% How many TRs are there (used to filter out incomplete runs)
num_TRs = 170;

for subj_num = 1:length(subj_info_struct), 
    fprintf('Running batch preprocessing on subject %d\n', subj_num);
    %%% Load in the manually saved fmri_spec .mat file
    load('lin_fMRI_spec_and_est_template.mat');
    matlabbatch{1}.spm.stats.fmri_spec.sess = {};
    this_subj_info = subj_info_struct(subj_num);
    
    %%% get subject imaging data and directory
    this_session_imaging_data_dir = fullfile(base_dir, imaging_data_subfolder, ...
        this_subj_info.ScanningDir, this_subj_info.ScanningDate, converted_subdir );

    %%% Find all bold dirs for current subject (directories that contain
    %%% 'ep2d_bold' in their name and have at least 135 (num_TRs) files in
    %%% them
    fprintf('Looking in %s for BOLD directories \n', this_session_imaging_data_dir);
    subj_bold_dirs = findBoldDirs(this_session_imaging_data_dir, num_TRs);
        
    if length(subj_bold_dirs) > 0

        fprintf('Found %d BOLD directories: \n', length(subj_bold_dirs));
        
        %%% Get the conditions .mat files, 
        %%% Auto-generate conditions files if they don't exist.
        fprintf('Looking for conditions files...\n');
        [~, this_subj_info] = getConditionsFiles(this_subj_info, 1);

        %%% The only thing we need to change is that we are going to
        %%% load in a different subject's data
        bold_files_from_manual_job = matlabbatch{1}.spm.stats.fmri_spec.sess;  
        all_bold_files = cell(1,num_TRs);
        for this_bold_dir_idx = 1:length(subj_bold_dirs),
            fprintf('  BOLD Run %03d: %s\n', this_bold_dir_idx, subj_bold_dirs{this_bold_dir_idx});
            %%% Construct absolute path for currently processed directory
            this_bold_dir_string = fullfile(this_session_imaging_data_dir, subj_bold_dirs{this_bold_dir_idx});
            %%% SPM select .nii files (matching regex, configure at start)
            [these_bold_files,dirs]=spm_select('ExtFPList',this_bold_dir_string, ...
                                               image_file_regex);
            bold_files_cell = mat2cell(these_bold_files,ones(1,size(these_bold_files, 1)),size(these_bold_files,2));

            %%% Put this subject's BOLD files into the jobs struct
            matlabbatch{1}.spm.stats.fmri_spec.sess(this_bold_dir_idx).scans = bold_files_cell;
            
            %%% Put conditions file for this run into job struct
            
            matlabbatch{1}.spm.stats.fmri_spec.sess(this_bold_dir_idx).multi{1} = ...
                this_subj_info.ConditionsFiles{this_bold_dir_idx};        
   
            %%% specify the rp_*.txt file in the multiple regressor part
            [motionReg_files,dirs]=spm_select('FPList',this_bold_dir_string, ...
                                               motionReg_file_regex);
           
            matlabbatch{1}.spm.stats.fmri_spec.sess(this_bold_dir_idx).multi_reg{1} = ...
                motionReg_files;
        end;  % End of loop through runs

        %%% Set the directory where the the SPM.mat file will be written
        %%% (creating it first if necessary)
        %analysis_dir_absolute = fullfile(this_subj_full_path, analysis_subdir);
        analysis_dir_absolute = fullfile(...
            sprintf(session_base_dir_template, this_subj_info.SubjectNum), ...
            analysis_subdir);
        
        if ~ exist(analysis_dir_absolute, 'dir')
            mkdir(analysis_dir_absolute);
        end
        matlabbatch{1}.spm.stats.fmri_spec.dir{1} = analysis_dir_absolute;
        %%% Set the filename for the SPM.mat file generated by the model
        %%% specification batch job for the estimation batch job
        matlabbatch{2}.spm.stats.fmri_est.spmmat{1} = ...
            fullfile(analysis_dir_absolute, 'SPM.mat');

        %%% Run the fMRI_spec job
        spm_jobman('run',matlabbatch);
    else
        %%% No BOLD directories found, abort
        fprintf('No bold directories found, skipping.\n');
    end
        
end;  % End of loop through subjects
