function [sessions] = do_multignb_main(sessions, job_name, NstableVox)
% run a Gaussian Naive Bayes classifier to decode whether a trial is having
% a person / building / tool stimulus
%
% wraps do_classifier
% 
% input:
%   sessions: struct array of scanning session info (see subj_info())
% output:
%   sessions: sessions struct with classifier results

import functools.*;
if nargin < 1
    sessions = subj_info();
end
if nargin < 2
    job_name = 'multisvm_wordtype_zscore';
end

% run the classifier
for vox = NstableVox
    if strcmp(job_name, 'multisvm_wordtype_zscore')
        sessions = do_classifier(sessions, ...
                                 @searchlight_svm, ...
                                 @make_classes_wordtype, ...
                                 job_name, ...
                                 [], [], Inf);
    elseif strcmp(job_name, 'multisvm_theme_harvard-oxford')
        sessions = do_classifier(sessions, ...
                                 @searchlight_svm, ...
                                 @make_classes_theme, ...
                                 job_name, ...
                                 'harvard-oxford', [], vox);
    elseif strcmp(job_name, 'multisvm_category_harvard-oxford')
        sessions = do_classifier(sessions, ...
                                 @searchlight_svm, ...
                                 @make_classes_wordtype, ...
                                 job_name, ...
                                 'harvard-oxford', [], vox);
    elseif strcmp(job_name, 'multisvm_theme_whole-brain') % most_stable_800 voxels
        sessions = do_classifier(sessions, ...
                                 @searchlight_svm, ...
                                 @make_classes_theme, ...
                                 job_name, ...
                                 'whole-brain', [], Inf);
    elseif strcmp(job_name, 'multisvm_category_whole-brain') % most_stable_800 voxels
        sessions = do_classifier(sessions, ...
                                 @searchlight_svm, ...
                                 @make_classes_wordtype, ...
                                 job_name, ...
                                 'whole-brain', [], Inf);
    else
    end               
    save(fullfile(BaseDir(), 'cache', 'classifier', ...
                  [job_name, '_stable', num2str(vox), '.mat']), ...
         'sessions');

end

